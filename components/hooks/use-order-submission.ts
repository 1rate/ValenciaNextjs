'use client';
import { useState } from 'react';
import Cookies from 'js-cookie';
import toast from 'react-hot-toast';
import { CheckoutFormValues } from '@/components/shared/checkout-form-values';
import { CartItem } from '@/store/cart';

const ORDER_LIMIT_KEY = 'orderHistory';
const ORDER_LIMIT = 100; // –ú–∞–∫—Å–∏–º—É–º 2 –∑–∞–∫–∞–∑–∞
const ORDER_LIMIT_WINDOW = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑, —É—á–∏—Ç—ã–≤–∞—è –ª–∏–º–∏—Ç –∑–∞–∫–∞–∑–æ–≤ –∑–∞ 24 —á–∞—Å–∞.
 * @returns {boolean} –ï—Å–ª–∏ –ª–∏–º–∏—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –∏–Ω–∞—á–µ false.
 */
function checkOrderLimit(): boolean {
  const now = Date.now();
  const ordersRaw = localStorage.getItem(ORDER_LIMIT_KEY);
  let orders: number[] = ordersRaw ? JSON.parse(ordersRaw) : [];

  // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–∫–∞–∑—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
  orders = orders.filter((ts) => now - ts < ORDER_LIMIT_WINDOW);

  if (orders.length >= ORDER_LIMIT) {
    return false;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –æ—Ç–º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
  orders.push(now);
  localStorage.setItem(ORDER_LIMIT_KEY, JSON.stringify(orders));
  return true;
}

export function useOrderSubmission() {
  const [submitting, setSubmitting] = useState<boolean>(false);

  const submitOrder = async (data: CheckoutFormValues): Promise<void> => {
    // –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–∫–∞–∑–æ–≤
    if (!checkOrderLimit()) {
      toast.error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞.');
      return;
    }

    try {
      setSubmitting(true);

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ cookies
      const cartItemsStr = Cookies.get('cartItems');
      let orderItems: CartItem[] = [];
      if (cartItemsStr) {
        try {
          orderItems = JSON.parse(cartItemsStr);
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ cookies', error);
          toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
          return;
        }
      }

      const formattedOrderItems = orderItems.map((item) => ({
        product: item.id, // —Å–µ—Ä–≤–µ—Ä –æ–∂–∏–¥–∞–µ—Ç id –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –ø–æ–ª–µ "product"
        quantity: item.quantity,
      }));

      // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
      const orderData = {
        ...data,
        order_items: formattedOrderItems,
      };

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ API
      const response = await fetch('http://127.0.0.1:8000/api/orders/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(orderData),
      });

      if (response.ok) {
        toast.success('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! üìù –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –æ–ø–ª–∞—Ç—É...', { icon: '‚úÖ' });
        const result = await response.json();
        const url: string | undefined = result.url;
        console.log(url)
        // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
        Cookies.remove('cartItems');
        // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 200 –º—Å
        setTimeout(() => {
        location.href = '/';
        }, 300);
        
      } else {
        const errorData = await response.json();
        console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorData);
        toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ' + JSON.stringify(errorData));
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
      toast.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.');
    } finally {
      setSubmitting(false);
    }
  };

  return { submitting, submitOrder };
}
